export const testMarkdown = `---
title: "欢迎使用 Supernode"
author: "Supernode 团队"
date: "2024-12-19"
tags: ["Supernode", "VSCode扩展", "Markdown", "文档工具"]
headerBackground:
  type: "image"
  value: "/images/rockets/space1.jpg"
  opacity: 1
---

# 欢迎使用 Supernode

## 什么是 Supernode？

Supernode 是一个功能强大的 VSCode Markdown 预览扩展，专为现代开发者设计。它不仅提供实时 Markdown 预览功能，还集成了智能文件管理、多种视图模式和丰富的交互功能，让您的文档编辑体验更加高效和愉悦。

### 核心特性
- 🎯 **实时预览**：所见即所得的 Markdown 编辑体验
- 📁 **智能管理**：自动扫描和统计 Markdown 文件
- 🎨 **多种视图**：支持 Word、Excel、PPT 等多种展示模式
- 🔧 **高度可配置**：灵活的配置选项满足不同需求
- 🚀 **性能优化**：轻量级设计，快速响应

---

# 快速开始

## 安装与激活

### 安装步骤
1. 在 VSCode 中打开扩展面板 (Ctrl+Shift+X)
2. 搜索 "Supernode Markdown Extension"
3. 点击安装并重启 VSCode

### 自动激活
Supernode 会在以下情况自动激活：
- VSCode 启动完成时
- 打开 Markdown (.md) 文件时
- 打开 MDX (.mdx) 文件时

---

# 核心功能详解

## 实时 Markdown 预览

### 智能预览机制
Supernode 采用先进的实时预览技术，当您编辑 Markdown 文件时，预览面板会立即更新，无需手动刷新。

### 预览位置选项
- **beside**：在编辑器旁边显示（推荐）
- **active**：在当前活动编辑器位置显示
- **second**：在第二个编辑器组显示

### 支持的 Markdown 语法
- 基础文本格式（粗体、斜体、删除线）
- 标题层级（H1-H6）
- 列表（有序、无序、任务列表）
- 链接和图片
- 代码块和行内代码
- 表格
- 数学公式（LaTeX）
- 引用块
- 脚注

---

# 智能文件管理

## 自动文件扫描

### 扫描功能
Supernode 启动时会自动扫描工作目录下的所有 Markdown 文件，生成详细的统计报告。

### 扫描结果包含
- 文件总数和总大小
- 按扩展名分类的文件统计
- 每个文件的详细信息（名称、路径、大小、修改时间）
- 扫描时间戳

### 文件监听
- 实时监听文件变化
- 自动更新统计信息
- 支持启动/停止监听控制

---

# 多种视图模式

## Word 视图

### 功能特点
- 传统的文档编辑体验
- 支持完整的 Markdown 语法
- 实时预览和编辑
- 语法高亮和格式化
- **Header背景栏**：支持自定义颜色和DAG/Graph背景

### Header背景栏功能
Word 视图提供了强大的 Header 背景栏功能，让您可以为文档添加个性化的背景：

#### 背景类型
- **颜色背景**：支持纯色和渐变背景
- **图片背景**：内置高质量风景和太空图片
- **DAG背景**：显示文档的依赖关系图
- **Graph背景**：展示文档的网络关系图

#### 配置选项
- **背景类型选择**：颜色、DAG、Graph
- **背景样式**：预定义样式和自定义选项
- **透明度调节**：10%-100% 可调节
- **实时修改**：Modal中实时修改背景效果
- **取消功能**：可以取消修改恢复到原始设置

#### 配置示例
\`\`\`yaml
headerBackground:
  type: "image"  # 或 "color", "dag", "graph"
  value: "/images/rockets/rocket1.jpg"
  opacity: 0.8
\`\`\`

#### 内置图片选项
- **火箭发射**：震撼的火箭发射场景
- **太空星系**：美丽的星系和星云
- **海洋风景**：宁静的海滩和波浪
- **森林自然**：茂密的森林和自然风光
- **日落美景**：绚丽的日落和晚霞
- **抽象艺术**：现代抽象艺术背景
- **山脉风景**：雄伟的山脉和峰峦
- **自然风光**：优美的自然景观

### 适用场景
- 编写技术文档
- 创建项目说明
- 撰写博客文章
- 制作学习笔记

## Excel 视图

### 功能特点
- 表格数据可视化
- 支持复杂表格结构
- 数据排序和筛选
- 图表展示功能

### 适用场景
- 数据分析和报告
- 项目进度跟踪
- 统计信息展示
- 对比分析文档

## PPT 视图

### 功能特点
- 演示文稿模式
- 分页展示内容
- 支持动画效果
- 全屏演示功能

### 适用场景
- 技术分享演示
- 项目汇报
- 培训材料制作
- 产品介绍

---

# 高级功能

## 数学公式支持

### LaTeX 语法
Supernode 支持完整的 LaTeX 数学公式语法：

#### 行内公式
使用单个美元符号：$E = mc^2$

#### 块级公式
使用双美元符号：
$$
\\int_{-\\infty}^{\\infty} e^{-x^2} dx = \\sqrt{\\pi}
$$

### 支持的数学符号
- 基础运算符号
- 希腊字母
- 上下标
- 分数和根式
- 积分和微分
- 矩阵和行列式

## 代码高亮

### 支持的语言
- Python、JavaScript、TypeScript
- Java、C++、C#
- HTML、CSS、SQL
- Go、Rust、PHP
- JSON、YAML、XML
- 以及更多编程语言

### 代码块示例
\`\`\`python
def fibonacci(n):
    """计算斐波那契数列"""
    if n <= 1:
        return n
    return fibonacci(n-1) + fibonacci(n-2)

print("斐波那契数列前10项:")
for i in range(10):
    print(f"F({i}) = {fibonacci(i)}")
\`\`\`

---

# 配置与自定义

## 基础配置

### 自动预览设置
\`\`\`json
{
  "supernode.autoOpenPreview": true
}
\`\`\`

### 预览位置设置
\`\`\`json
{
  "supernode.previewPosition": "beside"
}
\`\`\`

## 高级配置

### 主题定制
Supernode 支持深色主题，提供舒适的夜间编辑体验。

### 性能优化
- 自动内存管理
- 智能缓存策略
- 异步文件处理
- 资源自动清理

---

# 命令与快捷键

## 可用命令

| 命令 | 功能描述 | 使用场景 |
|------|----------|----------|
| 打开 Markdown 预览 | 手动开启预览面板 | 需要重新打开预览时 |
| 扫描 Markdown 文件 | 扫描并统计文件 | 查看项目文档统计 |
| 启动文件监听 | 开始监听文件变化 | 需要实时更新时 |
| 停止文件监听 | 停止文件监听 | 节省系统资源时 |
| 刷新 Problems 面板 | 刷新诊断信息 | 解决显示问题时 |
| 清除所有诊断 | 清除诊断信息 | 清理缓存时 |
| 验证路径配置 | 验证扩展配置 | 排查配置问题时 |

## 快捷键支持
- 在 Markdown 文件中，预览按钮会出现在编辑器标题栏
- 支持命令面板快速访问所有功能

### 快速命令快捷键
| 快捷键 | 命令 | 功能描述 |
|--------|------|----------|
| \`Ctrl+Shift+P\` | 快速打开预览 | 立即打开 Markdown 预览面板 |
| \`Ctrl+Shift+T\` | 快速切换预览 | 切换预览面板的显示/隐藏状态 |
| \`Ctrl+Shift+S\` | 快速扫描文件 | 快速扫描并统计 Markdown 文件 |
| \`Ctrl+Shift+W\` | 快速切换文件监听 | 启动或停止文件变化监听 |

### 快速命令特性
- ⚡ **即时响应**：快捷键触发后立即执行，无需等待
- 🎯 **智能反馈**：执行后显示状态提示信息
- 🔄 **状态切换**：支持开/关状态的智能切换
- 📱 **用户友好**：提供清晰的操作反馈和状态指示

---

# 智能快速输入

## 快速输入功能

Supernode 提供了强大的智能快速输入功能，让您能够通过简单的斜杠命令快速插入常用的 Markdown 元素。

### 快速输入语法

使用 \`/\` 符号触发快速输入，然后输入对应的命令：

#### 标题快速输入
- \`/h1\` → \`# 标题\`
- \`/h2\` → \`## 标题\`
- \`/h3\` → \`### 标题\`
- \`/h4\` → \`#### 标题\`
- \`/h5\` → \`##### 标题\`
- \`/h6\` → \`###### 标题\`

#### 列表快速输入
- \`/ul\` → 无序列表项
- \`/ol\` → 有序列表项
- \`/li\` → 列表项
- \`/task\` → 任务列表项

#### 格式化快速输入
- \`/bold\` → **粗体文本**
- \`/italic\` → *斜体文本*
- \`/code\` → \`行内代码\`
- \`/link\` → [链接文本](URL)
- \`/image\` → ![图片描述](图片URL)

#### 结构元素快速输入
- \`/table\` → 插入表格模板
- \`/quote\` → > 引用块
- \`/codeblock\` → 代码块
- \`/divider\` → 分隔线
- \`/footnote\` → 脚注

#### 特殊功能快速输入
- \`/math\` → 数学公式
- \`/latex\` → LaTeX 公式
- \`/mermaid\` → Mermaid 图表
- \`/excalidraw\` → Excalidraw 绘图

### 使用示例

#### 快速创建标题结构
\`\`\`
/h1 项目介绍
/h2 功能特性
/h3 核心功能
/h4 详细说明
\`\`\`

#### 快速插入列表
\`\`\`
/ul 第一项
/ul 第二项
  /ul 嵌套项
/ul 第三项
\`\`\`

#### 快速格式化文本
\`\`\`
/bold 重要信息
/italic 强调内容
/code 代码示例
/link 访问官网
\`\`\`

### 智能提示功能

- **自动补全**：输入 \`/\` 后会自动显示可用的命令列表
- **实时预览**：输入过程中可以实时预览效果
- **智能建议**：根据上下文推荐最合适的命令
- **快捷键支持**：支持 Tab 键快速选择命令

---

# 故障排除

## 常见问题

### 预览不显示
**问题**：Markdown 预览面板无法显示
**解决方案**：
1. 检查文件是否为 .md 或 .mdx 格式
2. 使用"验证路径配置"命令检查设置
3. 查看扩展主机控制台的错误信息
4. 重启 VSCode

### 文件扫描失败
**问题**：无法扫描 Markdown 文件
**解决方案**：
1. 确保工作目录有读取权限
2. 检查磁盘空间是否充足
3. 查看输出面板中的详细错误信息
4. 尝试手动执行扫描命令

### 配置不生效
**问题**：配置更改后没有生效
**解决方案**：
1. 重启 VSCode
2. 检查配置文件语法是否正确
3. 使用命令面板重新加载窗口
4. 清除扩展缓存

## 性能优化建议

### 大型项目优化
- 关闭自动预览以提高启动速度
- 在不需要时停止文件监听
- 定期清理诊断缓存
- 使用适当的预览位置设置

### 内存管理
- 扩展会自动管理资源
- 关闭预览面板时自动清理
- 文件监听器会在扩展停用时清理

---

# 技术架构

## 设计原则

### 面向对象设计
Supernode 遵循 SOLID 原则，采用面向对象的设计模式，确保代码的可维护性和扩展性。

### 模块化架构
- **配置管理**：统一的配置读写接口
- **文件操作**：安全的文件处理机制
- **事件监听**：高效的事件处理系统
- **WebView 管理**：稳定的预览面板管理
- **路径配置**：智能的路径管理和验证

## 技术栈

### 后端 (VSCode 扩展)
- **语言**：TypeScript
- **框架**：VSCode Extension API
- **构建工具**：Webpack
- **测试框架**：Jest

### 前端 (WebView)
- **框架**：React 18 + TypeScript
- **UI 库**：Ant Design
- **状态管理**：Zustand
- **样式**：Tailwind CSS
- **构建工具**：Vite

### 共享模块
- **消息通信**：自定义消息协议
- **数据模型**：TypeScript 类型定义
- **工具函数**：通用工具库

---

# 更新与维护

## 版本更新

### 当前版本
- **版本号**：v1.0.0
- **发布日期**：2024年12月
- **兼容性**：VSCode 1.74.0+

### 更新内容
- ✨ 初始版本发布
- 🎯 实时 Markdown 预览功能
- 📁 智能文件扫描和统计
- ⚙️ 灵活的配置选项
- 🔧 路径配置管理系统
- 📊 详细的文件统计报告

## 维护支持

### 问题反馈
如果您遇到问题或需要帮助：
1. 查看本文档的故障排除部分
2. 检查扩展主机控制台的错误信息
3. 在 GitHub 上提交 issue

### 功能建议
欢迎提出新功能建议：
1. 在 GitHub 上提交 feature request
2. 详细描述功能需求和预期效果
3. 提供使用场景示例

---

# 许可证与贡献

## 开源许可

### 许可证类型
本项目采用 MIT-NC 许可证，详见 LICENSE 文件。

### 使用条款
- 允许个人和商业使用
- 需要保留版权声明
- 不承担任何责任

## 贡献指南

### 如何贡献
1. Fork 项目仓库
2. 创建功能分支
3. 提交代码更改
4. 创建 Pull Request

### 开发环境
1. 克隆项目仓库
2. 安装依赖：\`npm run install:all\`
3. 构建项目：\`npm run build\`
4. 启动开发模式：\`npm run dev\`

---

# 总结

## 主要优势

### 用户体验
- 🎯 **直观易用**：简洁的界面设计，快速上手
- ⚡ **高效响应**：实时预览，即时反馈
- 🎨 **美观展示**：现代化的 UI 设计
- 🔧 **灵活配置**：满足不同用户需求

### 技术优势
- 🏗️ **稳定架构**：模块化设计，易于维护
- 🚀 **高性能**：优化的渲染引擎
- 🔒 **安全可靠**：完善的错误处理
- 📈 **可扩展**：支持插件扩展

## 使用建议

### 最佳实践
1. **合理使用自动预览**：大型项目建议关闭以提高性能
2. **定期清理缓存**：保持系统运行流畅
3. **选择合适的视图模式**：根据内容类型选择最佳展示方式
4. **利用文件监听功能**：实时跟踪文档变化

### 学习资源
- 查看官方文档和示例
- 参与社区讨论
- 关注更新日志
- 提交反馈和建议

---

## 开始您的 Supernode 之旅

现在您已经了解了 Supernode 的所有主要功能，是时候开始使用这个强大的 Markdown 编辑工具了！

### 下一步
1. 打开一个 Markdown 文件
2. 体验实时预览功能
3. 尝试不同的视图模式
4. 探索高级功能
5. 自定义您的配置

**享受高效的 Markdown 编辑体验！** 🚀

---

*感谢您选择 Supernode，我们期待为您提供更好的文档编辑体验！*
`;
